// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:wanandroidflutter/entity/user_info_entity.dart';
import 'package:wanandroidflutter/generated/json/user_info_entity_helper.dart';
import 'package:wanandroidflutter/entity/home_index_banner_entity.dart';
import 'package:wanandroidflutter/generated/json/home_index_banner_entity_helper.dart';
import 'package:wanandroidflutter/entity/home_index_article_list_entity.dart';
import 'package:wanandroidflutter/generated/json/home_index_article_list_entity_helper.dart';

class JsonConvert<T> {
  T fromJson(Map<String, dynamic> json) {
    return _getFromJson<T>(runtimeType, this, json);
  }

  Map<String, dynamic> toJson() {
    return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
      case UserInfoEntity:
        return userInfoEntityFromJson(data as UserInfoEntity, json) as T;
      case HomeIndexBannerEntity:
        return homeIndexBannerEntityFromJson(
            data as HomeIndexBannerEntity, json) as T;
      case HomeIndexArticleListEntity:
        return homeIndexArticleListEntityFromJson(
            data as HomeIndexArticleListEntity, json) as T;
      case HomeIndexArticleListData:
        return homeIndexArticleListDataFromJson(
            data as HomeIndexArticleListData, json) as T;
      case HomeIndexArticleListDatasTag:
        return homeIndexArticleListDatasTagFromJson(
            data as HomeIndexArticleListDatasTag, json) as T;
    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
    switch (type) {
      case UserInfoEntity:
        return userInfoEntityToJson(data as UserInfoEntity);
      case HomeIndexBannerEntity:
        return homeIndexBannerEntityToJson(data as HomeIndexBannerEntity);
      case HomeIndexArticleListEntity:
        return homeIndexArticleListEntityToJson(
            data as HomeIndexArticleListEntity);
      case HomeIndexArticleListData:
        return homeIndexArticleListDataToJson(data as HomeIndexArticleListData);
      case HomeIndexArticleListDatasTag:
        return homeIndexArticleListDatasTagToJson(
            data as HomeIndexArticleListDatasTag);
    }
    return data as T;
  }

  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {
      case 'UserInfoEntity':
        return UserInfoEntity().fromJson(json);
      case 'HomeIndexBannerEntity':
        return HomeIndexBannerEntity().fromJson(json);
      case 'HomeIndexArticleListEntity':
        return HomeIndexArticleListEntity().fromJson(json);
      case 'HomeIndexArticleListData':
        return HomeIndexArticleListData().fromJson(json);
      case 'HomeIndexArticleListDatasTag':
        return HomeIndexArticleListDatasTag().fromJson(json);
    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {
      case 'UserInfoEntity':
        return List<UserInfoEntity>();
      case 'HomeIndexBannerEntity':
        return List<HomeIndexBannerEntity>();
      case 'HomeIndexArticleListEntity':
        return List<HomeIndexArticleListEntity>();
      case 'HomeIndexArticleListData':
        return List<HomeIndexArticleListData>();
      case 'HomeIndexArticleListDatasTag':
        return List<HomeIndexArticleListDatasTag>();
    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}
